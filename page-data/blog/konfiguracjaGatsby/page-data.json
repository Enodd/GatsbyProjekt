{"componentChunkName":"component---src-templates-blogtemp-js","path":"/blog/konfiguracjaGatsby","result":{"data":{"markdownRemark":{"frontmatter":{"title":"Konfiguracja Gatsby.js","date":"31.03.2021","updatedate":"04.04.2021"},"html":"<style>\n    .inline-code{\n        background-color: #233D4D; \n        color: #fff; \n        font-family: 'Source code pro', monospace; \n        display: inline; \n        padding: .05vw;\n    }\n</style>\n<article class='article'>\n<blockquote class=\"article__tableofcontent\"> \n    <h3>\n    \tSpis treści\n    </h3>\n    <ul>\n        <li>\n            <a href=\"#post1\">\n                Instalacja Node.js\n            </a>\n        </li>\n        <li>\n            <a href=\"#post2\">\n                Instalacja Git'a\n            </a>\n        </li>\n        <li>\n            <a href=\"#post3\">\n                Przygotowania\n            </a>\n        </li>\n        <li>\n            <a href=\"#post4\">\n                Przygotowania\n            </a>\n        </li>\n    </ul>\n</blockquote>\n<div class=\"article__content\">\n<p>Gatsby.js jest framework, którego instalacja jak i konfiguracja nie jest skomplikowana. Dostępny jest na każdej platformie, niezależnie od tego czy to <a href='#linux'>linux</a>, <a href='#windows'>windows</a> czy <a href='#macos'>macOS</a>.</p>\n<h2 id=\"post1\">\n\tInstalacja Node.js\n</h2>\n<p>Node.js jest środowiskiem, które umożliwia uruchamianie kodu Javascript poza przeglądarką. Gatsby jest zbudowany w oparciu na Node.js. Chcąc tworzyć aplikacje webowe przy użyciu Gatsbiego potrzebna nam będzie najnowsza wersja Node.js.</p>\n<h5 id='linux'>\n    Instalacja na Linux'ie\n</h5>\n<p>Ze względu na szeroki zakres dystrybucji, które można wybrać, przedstawię proces instalacji z podziałem, który jest widoczny w <a href=\"https://www.gatsbyjs.com/docs/tutorial/part-zero\">dokumentacji</a>. </p>\n<ul>\n    <li>\n    \t<a href=\"#list1\">\n            Debian, ubuntu i inne dystrybucje bazujące na&nbsp;apt\n        </a>\n    </li>\n    <li>\n    \t<a href=\"#list2\">\n            Arch, Manjaro i inne dytrybucje oparte o&nbsp;pacman\n        </a>\n    </li>\n    <li>\n    \t<a href=\"#list3\">\n        \tFerdora, RedHat i inne dystrybucje bazujące na&nbsp;dnf\n        </a>\n    </li>\n</ul>\n<h5 id=\"list1\">\n    Debian, ubuntu i inne dystrybucje bazujące na&nbsp;apt\n</h5>\n<ol>\n<li>\n<p>Pierwszym krokiem jest uaktualnienie wszystkich pakietów. W tym celu wykorzystujemy te polecenia:</p>\n<pre><code class=\"language-shell\">sudo apt update\nsudo apt -y upgrade\n</code></pre>\n</li>\n<li>\n<p>Następnie instalujemy curl - program umożliwiający przenoszenie danych i pobieranie dodatkowych zależności:</p>\n<pre><code class=\"language-Shell\">sudo apt-get install curl\n</code></pre>\n</li>\n<li>\n<p>Po instalacji pobieramy i instalujemy nvm:</p>\n<pre><code class=\"language-shell\">curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.1/install.sh | bash\n</code></pre>\n</li>\n<li>\n<p>Chcąc się upewnić, że wszystko jest poprawnie zainstalowane, wykorzystujemy poniższe polecenie. Polecenie powinno zwrócić nam versję nvm. W przypadku, gdyby wyświetlał nam się błąd, należy użyć polecenia <span class=\"inline-code\">source ~/.nvm/nvm.sh</span>.</p>\n<pre><code class=\"language-Shell\">nvm --version\n</code></pre>\n</li>\n<li>\n<p>Następnie aktualizujemy nvm do najnowszej wersji:</p>\n<pre><code class=\"language-Shell\">nvm install node\n</code></pre>\n</li>\n</ol>\n<h5 id=\"list2\">\n   Arch, Manjaro i inne dytrybucje oparte o&nbsp;pacman\n</h5>\n<ol>\n<li>\n<p>Pierwszym krokiem jest uaktualnienie wszystkich pakietów. W tym celu wykorzystujemy te polecenia:</p>\n<pre><code class=\"language-shell\">sudo pacman -Syy\n</code></pre>\n</li>\n<li>\n<p>Te dystrybucje domyślnie mają zainstalowanego curl, więc wystarczy instalacja nvm:</p>\n<pre><code class=\"language-shell\">curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.1/install.sh | bash\n</code></pre>\n</li>\n<li>\n<p>Przed używaniem nvm, musimy doinstalować dodatkowe programy:</p>\n<pre><code class=\"language-shell\">sudo pacman -S grep awk tar\n</code></pre>\n</li>\n<li>\n<p>Chcąc się upewnić, że wszystko jest poprawnie zainstalowane, wykorzystujemy poniższe polecenie. Polecenie powinno zwrócić nam versję nvm. W przypadku, gdyby wyświetlał nam się błąd, należy użyć polecenia <span class='inline-code'>source ~/.nvm/nvm.sh</span>.</p>\n<pre><code class=\"language-Shell\">nvm --version\n</code></pre>\n</li>\n<li>\n<p>Następnie aktualizujemy nvm do najnowszej wersji:</p>\n<pre><code class=\"language-Shell\">nvm install node\n</code></pre>\n</li>\n</ol>\n<h5 id=\"list3\">\n    Ferdora, RedHat i inne dystrybucje bazujące na&nbsp;dnf\n</h5>\n<ol>\n<li>\n<p>Te dystrybucje domyślnie mają zainstalowanego curl, więc wystarczy instalacja nvm:</p>\n<pre><code class=\"language-shell\">curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.1/install.sh | bash\n</code></pre>\n</li>\n<li>\n<p>Chcąc się upewnić, że wszystko jest poprawnie zainstalowane, wykorzystujemy poniższe polecenie. Polecenie powinno zwrócić nam versję nvm.</p>\n<pre><code class=\"language-Shell\">nvm --version\n</code></pre>\n</li>\n</ol>\n<h5 id='windows'>\n    Instalacja na windowsie\n</h5>\n<p>Instalacja Node.js na systemie windows jest znacznie prostsza niż na linuie, lub macOS. Wystarczy pobrać go z <a href=\"https://nodejs.org/en/\">oficjalnej strony</a></p>\n<h5 id='macos'>\n    Instalacja na macOS\n</h5>\n<h6>Instalacja Homebrew</h6>\n<p>Z informacji, które mamy w dokumentacji, instalację zaleca się w oparciu o <a href=\"https://brew.sh\">Homebrew</a> - menagera brakujących pakietów dla macOS lub linux.</p>\n<ol>\n<li>Pierwszą czynnością, jaką należy zrobić jest to zainstalować <a href=\"https://docs.brew.sh/Installation\">Homebrew zgodnie z instrukcjami</a>.</li>\n<li>\n<p>Następnie w terminalu sprawdzamy czy całość jest poprawnie zainstalowana. Najprościej jest sprawdzić wersję Homebrew:</p>\n<pre><code class=\"language-Shell\">brew -v\n</code></pre>\n</li>\n</ol>\n<h6>Instalacja Xcode Command Line Tools</h6>\n<p><strong>Xcode Command Line Tools</strong> to zestaw narzędzi umożliwiających rozpoczęcie procesu tworzenia aplikacji, w oparciu o terminal/wiersz poleceń, na systemie macOS.</p>\n<ol>\n<li>\n<p>Chcąc go zainstalować wystarczy wykorzystać jedno polecenie:</p>\n<pre><code class=\"language-Shell\">xcode-select --install\n</code></pre>\n</li>\n</ol>\n<blockquote>\n<p>W przypadku, gdy zakończy się to niepowodzeniem, program można pobrać bezpośrednio ze <a href=\"https://developer.apple.com/download/more/\">strony apple</a> po zalogowaniu się na koncie deweloperskim Apple. </p>\n</blockquote>\n<ol start=\"2\">\n<li>Następnie akceptujemy licencję oprogramowania.</li>\n</ol>\n<h6>Instalacja Node.js</h6>\n<ol>\n<li>\n<p>W terminalu/wierszu poleceń instalujemy Node.js przy użyciu wcześniej zainstalowanego Homebrew:</p>\n<pre><code class=\"language-Shell\">brew install node\n</code></pre>\n</li>\n</ol>\n<blockquote>\n<p>Jeżeli nie chcesz instalować przy użyciu Homebrew, możesz pobrać i zainstalować najnowszą wersję Node.js z <a href=\"https://nodejs.org/en/\">oficjalnej strony</a>.</p>\n</blockquote>\n<h2 id=\"post2\">\n    Instalacja Git'a\n</h2>\n<p>Czym jest git?<br>\nChcąc to określić w najprosztszej możliwej formie, jest to narzędzie/oprogramowanie, które umożliwa kontrolowanie wersji naszego oprogramowania. Wykorzystywane są do tego tzw. migawki, które stanowią \"obraz\" naszego projektu w momencie zapisu.<br>\nNa co to się przekłada? Umożliwia nam cofanie się do poprzednich wersji kodu, a także na porównywanie wykonanych zmian pomiędzy wersjami.</p>\n<p>Na czym polega cały proces instalacji? Niezależnie od systemu, z którego korzystamy elementem wyjściowym będzie <a href=\"https://git-scm.com/downloads\">oficjalna strona git'a</a>, na której znajdują się instrukcje dotyczące procesu instalacji na naszym systemie.</p>\n<h6>Konfiguracja Git'a</h6>\n<p>Pierwszym krokiem po instalacji Git'a jest ustawienie nazwy użytkownika i mail'a:</p>\n<pre><code>git config --global user.name \"Nazwa Używkonika\"\ngit config --global user.email przykladowymail@example.com\n</code></pre>\n<p>Dlaczego jest to ważne? Jest to ważne, z tego powodu, że każda utworzona migawka używa tych informacji i jest z nimi związana. Przykładowo w sytuacji, gdy będziemy chcieli przesłać te migawki na github'a, nie będziemy musieli, za każdym razem ich podawać.</p>\n<h2 id=\"post3\">\nInstalacja Gatsby CLI\n</h2>\n<p>Teraz można przejść bezpośrednio do najważniejszego elementu tego poradnika - instalacji Gatbsiego. Proces ten jest bardzo prosty, wystarczy go zainstalować przy pomocy jednego polecenia:</p>\n<pre><code class=\"language-Shell\">npm install -g gatsby-cli\n</code></pre>\n<blockquote>\n<p>Npm jest to menadżer pakietów JavaScript, który został zainstalowany wraz z Node.js.</p>\n</blockquote>\n<p>I udało się! Jesteśmy gotowi do tworzenia naszej własnej strony opartej na <strong>Gatbsy.js</strong> .<br>\nW następnych artykułach będzie opisanych proces tworzenie tej strony z osoby, która po raz pierwszy korzysta z jakiekolwiek frameworka. Nie ma czego się obawiać, jest tylko to co trzeba zaprogramować.</p>\n</div>\n</article>"}},"pageContext":{"slug":"konfiguracjaGatsby","previous":{"fields":{"slug":"czymJestGatsby"},"frontmatter":{"title":"Czym jest Gatsby.js?"}},"next":{"fields":{"slug":"react"},"frontmatter":{"title":"React"}}}},"staticQueryHashes":["3159585216","440568431"]}