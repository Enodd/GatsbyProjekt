{"version":3,"sources":["webpack://gatsby-projekt/./src/components/header.js","webpack://gatsby-projekt/./src/components/footer.js","webpack://gatsby-projekt/./src/components/layout.js","webpack://gatsby-projekt/./src/pages/blog.js"],"names":["data","useStaticQuery","className","site","siteMetadata","title","to","ClassName","href","author","props","children","allMarkdownRemark","edges","map","edge","node","fields","slug","frontmatter","date"],"mappings":"0KA4CA,EAxCe,WACX,IAAMA,GAAOC,QAAe,cAU5B,OACI,0BAAQC,UAAU,eACd,sBAAIA,UAAU,sBAAsBF,EAAKG,KAAKC,aAAaC,OAC3D,sBAAIH,UAAU,0BACV,sBAAIA,UAAU,iBACV,gBAAC,KAAD,CAAMI,GAAG,QAAQC,UAAU,cAA3B,SAIJ,sBAAIL,UAAU,iBACV,gBAAC,KAAD,CAAMI,GAAG,OAAOC,UAAU,cAA1B,QAIJ,sBAAIL,UAAU,iBACV,gBAAC,KAAD,CAAMI,GAAG,OAAOC,UAAU,cAA1B,QAIJ,sBAAIL,UAAU,iBACV,gBAAC,KAAD,CAAMI,GAAG,OAAOC,UAAU,cAA1B,WCZpB,EAnBe,WACX,IAAMP,GAAOC,QAAe,aAS5B,OACI,0BAAQC,UAAU,eACd,sBAAIA,UAAU,uBAAd,mBACoB,qBAAGA,UAAU,oBAAoBM,KAAK,yBAAyBR,EAAKG,KAAKC,aAAaK,QAD1G,OCAZ,EAVe,SAACC,GACZ,OACI,uBAAKR,UAAU,aACX,gBAAC,EAAD,MACCQ,EAAMC,SACP,gBAAC,EAAD,S,yECiCZ,UAxCiB,WACb,IAAMX,GAAOC,QAAe,cAiB5B,OACI,gBAAC,IAAD,KACI,sBAAIC,UAAU,aACTF,EAAKY,kBAAkBC,MAAMC,KAAI,SAACC,GAC/B,OACI,sBAAIb,UAAU,2BACV,gBAAC,KAAD,CAAMI,GAAE,SAAWS,EAAKC,KAAKC,OAAOC,MAChC,sBAAIhB,UAAU,eACTa,EAAKC,KAAKG,YAAYd,OAE3B,qBAAGH,UAAU,cACRa,EAAKC,KAAKG,YAAYC","file":"component---src-pages-blog-js-2e5d6086254484f0cee7.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql, useStaticQuery } from 'gatsby'\nimport \"../styles/header.scss\"\n\nconst Header = () => {\n    const data = useStaticQuery(graphql`\n        query {\n            site {\n                siteMetadata{\n                    title\n                }\n            }\n        }\n    `)\n\n    return (\n        <header className=\"core-header\">\n            <h1 className=\"core-header__title\">{data.site.siteMetadata.title}</h1>\n            <ul className=\"core-header__menu menu\">\n                <li className=\"menu__element\">\n                    <Link to=\"/blog\" ClassName=\"menu__link\">\n                        blog\n                    </Link>\n                </li>\n                <li className=\"menu__element\">\n                    <Link to=\"/404\" ClassName=\"menu__link\">\n                        404\n                    </Link>\n                </li>\n                <li className=\"menu__element\">\n                    <Link to=\"/404\" ClassName=\"menu__link\">\n                        404\n                    </Link>\n                </li>\n                <li className=\"menu__element\">\n                    <Link to=\"/404\" ClassName=\"menu__link\">\n                        404\n                    </Link>\n                </li>\n            </ul>\n        </header>\n    )\n}\n\nexport default Header","import React from 'react'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport \"../styles/footer.scss\"\n\nconst Footer = () => {\n    const data = useStaticQuery(graphql`\n        query {\n            site {\n                siteMetadata {\n                    author\n                }\n            }\n        }\n    `)\n    return (\n        <footer className=\"core-footer\">\n            <h2 className=\"core-footer__author\">\n                Website made by <a className=\"core-footer__link\" href=\"twitter.com/foxnacity\">{data.site.siteMetadata.author}</a>.\n            </h2>\n        </footer>\n    )\n}\n\nexport default Footer","import React from 'react'\nimport \"@fontsource/rubik\"\nimport \"@fontsource/source-serif-pro\"\nimport Header from \"../components/header\"\nimport Footer from \"../components/footer\"\n\nconst Layout = (props) => {\n    return (\n        <div className=\"container\">\n            <Header />\n            {props.children}\n            <Footer />\n        </div>\n    )\n}\n\nexport default Layout","import React from 'react'\nimport { Link, graphql, useStaticQuery } from 'gatsby'\nimport Layout from '../components/layout'\n\nconst Blogpage = () => {\n    const data = useStaticQuery(graphql`\n    query {\n        allMarkdownRemark{\n            edges{\n                node{\n                    frontmatter{\n                        title\n                        date\n                    }\n                    fields{\n                        slug\n                    }\n                }\n            }\n        }\n    }\n    `)\n    return (\n        <Layout>\n            <ol className=\"post-list\">\n                {data.allMarkdownRemark.edges.map((edge) => {\n                    return (\n                        <li className=\"post-list__element post\">\n                            <Link to={`/blog/${edge.node.fields.slug}`}>\n                                <h2 className=\"post__title\">\n                                    {edge.node.frontmatter.title}\n                                </h2>\n                                <p className=\"post__date\">\n                                    {edge.node.frontmatter.date}\n                                </p>\n                            </Link>\n                        </li>\n                    )\n                })}\n            </ol>\n        </Layout>\n    )\n}\n\nexport default Blogpage"],"sourceRoot":""}